---
-
  name: ensure iptables is running
  service: name=iptables state=started
  tags: iptables
-
  name: remove port 587 entry
  lineinfile: dest=/etc/sysconfig/iptables
              regexp='--dport\ 587'
              state=absent
  tags: iptables
-
  name: insert port 587 entry
  tags: iptables
  lineinfile: dest=/etc/sysconfig/iptables
            line='-A INPUT -p tcp -m tcp --dport 587 -j ACCEPT'
            insertbefore='-A INPUT -i lo -j ACCEPT'
            state=present
  notify: restart iptables
-
  name: remove sendmail
  yum: name=sendmail state=absent
-
  name: install postfix related packages
  yum: name={{ item }} state=present
  with_items:
    - postfix
    - dovecot
    - dovecot-mysql
-
  name: start postfix
  service: name=postfix state=started
-
  name: copy postfix files
  template: src={{ item }}.cf dest=/etc/postfix/
  with_items:
    - main
    - master
  notify: restart postfix
-
  name: copy dovecot files
  copy: src={{ item}}
        dest=/etc/dovecot/conf.d/
  with_items:
    - "10-ssl.conf"
    - auth-sql.conf.ext
  notify: restart dovecot
-
  name: copy dovecot templates
  template: src={{ item }} dest=/etc/dovecot/conf.d/
  with_items:
    - "10-auth.conf"
    - "10-mail.conf"
    - "10-master.conf"
    - "15-lda.conf"
    - "20-imap.conf"
    - "90-quota.conf"
  notify: restart dovecot
-
  name: copy dovecot-sql.conf.ext
  template: src={{ item }} dest=/etc/dovecot
  with_items:
    - dovecot.conf
    - dovecot-sql.conf.ext
    - dovecot-dict-sql.conf.ext
  notify: restart dovecot
-
  name: create /etc/postfix/certs
  file: state=directory path=/etc/postfix/certs
-
  name: create postfix mysql database
  mysql_db: name={{ database_name }} state=present
-
  name: remove old mysql user
  mysql_user: name={{ database_user }}
              login_user={{ database_root }}
              login_password= {{ database_root_password }}
              state=absent
-
  name: create mysql user
  mysql_user: name={{ database_user }}
              host={{ item }}
              password={{ database_password }} priv=*.*:ALL,GRANT
              login_user={{ database_root }}
              login_password= {{ database_root_password }}
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
-
  name: add mail group
  group: name={{ database_user }} state=present gid={{ database_user_group_id }}
-
  name: add user
  user: name={{ database_user }} state=present group={{ database_user }} home=/home/{{ database_user }} shell=/sbin/nologin uid={{ database_user_id }}

