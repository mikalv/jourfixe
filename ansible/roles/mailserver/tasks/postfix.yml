---
-
  name: add mail group
  group: name={{ mailbox_owner }} state=present gid={{ mailbox_owner_group_id }}

-
  name: add user
  user: name={{ mailbox_owner }} state=present group={{ mailbox_owner }} home=/home/{{ mailbox_owner }} shell=/sbin/nologin uid={{ mailbox_owner_id }}

-
  name: remove sendmail
  yum: name=sendmail state=absent

-
  name: install postfix related packages
  yum: name={{ item }} state=present
  with_items:
    - postfix
    - dovecot
    - dovecot-mysql

-
  name: start and enable postfix & dovecot
  service: name={{ item }} state=started enabled=yes
  with_items:
    - postfix
    - dovecot

-
  name: copy postfix files
  template: src=postfix/{{ item }}.cf dest=/etc/postfix/
  with_items:
    - main
    - master

-
  name: copy dovecot files
  copy: src=dovecot/{{ item }}
        dest=/etc/dovecot/conf.d/
  with_items:
    - "10-ssl.conf"
    - auth-sql.conf.ext

-
  name: copy dovecot templates
  template: src=dovecot/{{ item }} dest=/etc/dovecot/conf.d/
  with_items:
    - "10-auth.conf"
    - "10-mail.conf"
    - "10-master.conf"
    - "15-lda.conf"
    - "20-imap.conf"
    - "90-quota.conf"
  notify: restart dovecot
-
  name: copy dovecot-sql.conf.ext
  template: src=dovecot/{{ item }} dest=/etc/dovecot
            owner=dovecot group=dovecot
  with_items:
    - dovecot.conf
    - dovecot-sql.conf.ext
    - dovecot-dict-sql.conf.ext
  notify: restart dovecot

-
  name: change ownership of /var/run/dovecot/dict
  file: state=file owner={{ mailbox_owner }} group={{ mailbox_owner }}
        path=/var/run/dovecot/{{ item }}
  with_items:
    - dict
    - auth-userdb
-
  name: create /etc/postfix/certs
  file: state=directory path=/etc/postfix/certs

-
  name: create postfix mysql database
  mysql_db: name={{ database_name }} state=present

# -
#   name: remove old mysql user
#   mysql_user: name={{ database_user }}
#               login_user={{ database_root }}
#               login_password= {{ database_root_password }}
#               state=absent

-
  name: create mysql user
  mysql_user: name={{ database_user }}
              host={{ item }}
              state=present
              password={{ database_password | default('test') }} priv={{ database_name }}.*:ALL,GRANT
              login_user={{ database_root }}
              login_password= {{ database_root_password }}
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
