---
- hosts: all
  sudo: true
  tasks:

  # - name: create /var/www
  #   file: path=/var/www state=directory

  # - name: create site symlink
  #   file: src=/vagrant dest=/var/www/site state=link
  #   notify: restart apache

  - name: install misc packages
    yum: name={{ item }} state=present
    with_items:
      - rubygems
      - git-core
      - curl
      - unzip
      - vim
      - zsh
      - ctags

  # git
  - name: get .dotfiles
    git: repo=https://github.com/schuppo/dotfiles.git dest=/home/vagrant/.dotfiles
    ignore_errors: True

  - name:  .dotfiles
    file: path=/home/vagrant/.dotfiles state=directory owner=vagrant group=vagrant mode=0750 recurse=yes

  - name: bootstrap .dotfiles
    shell: creates=/home/vagrant/.vimrc chdir=/home/vagrant/.dotfiles ./script/bootstrap <<< $'schuppo\noliver.schupp@yahoo.de\nO\n'

  - name: use zsh as default shell
    command: chsh -s /bin/zsh vagrant

  # sympa
  - name: create src directory
    command: mkdir /vagrant/ansible/src creates=/vagrant/ansible/src

  - name: download sympa if not present
    shell: chdir=/vagrant/ansible/src creates=sympa-6.1.19.tar.gz wget http://www.sympa.org/distribution/sympa-6.1.19.tar.gz

  # - name: install language packs for locale support
  #   apt: name={{ item }} state=latest
  #   with_items:
  #     - language-pack-de-base
  #     - language-pack-es-base

  # # memcached

  # - name: ensure memcached is installed
  #   apt: name=memcached state=latest


  # # beanstalk

  # - name: install beanstalk for local queues
  #   apt: name=beanstalkd state=present
  # - name: set up beanstalk
  #   copy: src=/vagrant/ansible/templates/beanstalkd dest=/etc/default/beanstalkd
  #   notify: restart beanstalkd


  # SELinux python bindings for libselinux if not present
  - name: install libselinux-python
    yum: name=libselinux-python state=present

  # Apache2

  - name: ensure apache is installed
    yum: name=httpd state=present

  - name: make sure apache is running
    service: name=httpd state=started enabled=true

  # - copy: src=/vagrant/ansible/templates/site.conf dest=/etc/httpd/sites-enabled/site.conf
  #   notify: restart apache

  # - file: path=/etc/httpd/sites-enabled/000-default.conf state=absent
  #   notify: restart apache

  - file: path=/etc/httpd/conf.d state=directory

  - copy: src=/vagrant/ansible/templates/fqdn.conf dest=/etc/httpd/conf.d/fqdn.conf
    notify: restart apache

  - copy: src=/vagrant/ansible/templates/nosendfile.conf dest=/etc/httpd/conf.d/nosendfile.conf
    notify: restart apache

  # # MySQL

  - name: install MySQL
    yum: name={{ item }} state=present
    with_items:
      - MySQL-python
      - mysql-server

  - name: make sure mysqld is running
    service: name=mysqld state=started enabled=true

  - name: add mysql user
    mysql_user: name=vagrant
                host={{ item }}
                password=vagrant priv=*.*:ALL,GRANT
                login_user=root
                login_password=
    with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost

  - name: create mysql databases
    mysql_db: name={{ item }}
              state=present
    with_items:
      - site_development
      - site_development_stats
      - site_testing
      - site_testing_stats

  - file: path=/etc/mysql/conf.d state=directory
  # - name: Set MySQL number of connections
  #   copy: src=/vagrant/ansible/templates/max_connections.cnf dest=/etc/mysql/conf.d/max_connections.cnf
  #   notify: restart mysql
  - name: Install mysql command line client configuration file
    copy: src=/vagrant/ansible/templates/my.cnf dest=/home/vagrant/.my.cnf owner=vagrant group=vagrant

  # # Add repos at webtatic
  - name: Add webtatic keys
    rpm_key: state=present key=http://repo.webtatic.com/yum/RPM-GPG-KEY-webtatic-andy

  - name: Add repo from webtatic.com
    command: rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm
    ignore_errors: True

  - copy: src=/vagrant/ansible/templates/webtatic.repo dest=/etc/yum.repos.d/

  # # PHP

  - name: install PHP55 packages
    yum: name={{ item }} state=present
    with_items:
      - php55w
      - php55w-mysql
      - php55w-mcrypt
      - php55w-gd

  - file: path=/etc/php/conf.d state=directory

  - copy: src=/vagrant/ansible/templates/php-site.ini dest=/etc/php/conf.d/php-site.ini
    notify: restart apache

  # - name: symlink common php configuration for cli handler
  #   file: src=/etc/php5/conf.d/php-site.ini dest=/etc/php5/cli/conf.d/php-site.ini state=link
  #   notify: restart apache

  # - name: symlink common php configuration for apache2 handler
  #   file: src=/etc/php5/conf.d/php-site.ini dest=/etc/php5/apache2/conf.d/php-site.ini state=link
  #   notify: restart apache

  # # phpmyadmin

  # - name: install phpmyadmin
  #   apt: name=phpmyadmin state=latest

  # # Assets compilation

  # - name: add nodejs ppa
  #   apt_repository: repo='ppa:chris-lea/node.js'

  # - name: install nodejs
  #   apt: name=nodejs state=latest

  # - name: install rubygems
  #   apt: name=rubygems state=present

  # - name: install compass
  #   command: gem install compass sass chunky_png fssm creates=/usr/local/bin/compass

  # # Set up site
  # #

  # - file: src=/vagrant dest=/var/www/site state=link
  # - file: path={{ item }} owner=vagrant group=vagrant mode=0777 state=directory
  #   with_items:
  #     - /var/cache/site
  #     - /var/cache/site/cache
  #     - /var/cache/site/clockwork
  #     - /var/cache/site/logs
  #     - /var/cache/site/meta
  #     - /var/cache/site/sessions
  #     - /var/cache/site/views

  # - name: ensure once more that 000-default.conf is deleted
  #   file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
  #   notify: restart apache

  # - name: ensure that phpmyadmin's stock config is deleted
  #   file: path=/etc/apache2/conf.d/phpmyadmin.conf state=absent

  # # - name: install npm packages
  # #   command: chdir=/var/www/site npm install --no-bin-links
  # #   register: out
  # #   changed_when: "out.stdout.strip() != ''"
  # #   sudo: false

  # # - name: install composer packages
  # #   command: chdir=/var/www/site bash pocket install
  # #   register: out
  # #   changed_when: "'Nothing to install or update' not in out.stdout"
  # #   sudo: false

  # # - name: set up artisan queue listen
  # #   copy: src=/vagrant/ansible/templates/supervisor-queue-listen.conf dest=/etc/supervisor/conf.d/supervisor-queue-listen.conf
  # #   notify: reload queue listener

  # # Common stuff

  handlers:
    - name: restart apache
      service: name=httpd state=restarted
  #   - name: restart mysql
  #     service: name=mysql state=restarted
  #   # - name: reload queue listener
  #   #   supervisorctl name=queue_listen state=restarted
  #   - name: restart beanstalkd
  #     service: name=beanstalkd state=restarted
